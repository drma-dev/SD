@page "/"
@page "/Index"
@inherits ComponenteCore<Index>
@using System.Linq
@using SD.Shared.Model
@inject ProviderServide ProviderServide
@inject Settings Settings

<Alert Visible="true" Color="Color.Secondary">
    <AlertMessage><Blazorise.Icon Name="FontAwesomeIcons.Heart"></Blazorise.Icon> Provedores Favoritos (@(myProviders?.Items.Count ?? 0) itens)</AlertMessage>
</Alert>
<AuthorizeView>
    <Authorized>
        <CustomVisibility NoData="(!myProviders?.Items.Any() ?? true)">
            <Row HorizontalGutter="4" VerticalGutter="4" Style="max-height: 215px; overflow: auto;">
                @foreach (var item in myProviders?.Items ?? new List<MyProvidersItem>())
                {
                    <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile">
                        <Button Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1">
                            <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.name" Class="w-100"></Image>
                        </Button>
                    </Column>
                }
            </Row>
        </CustomVisibility>
    </Authorized>
    <NotAuthorized>
        <Alert Visible="true" Color="Color.Warning">
            <AlertMessage><Blazorise.Icon Name="FontAwesomeIcons.Bullhorn"></Blazorise.Icon> Favor, realizar login para utilizar essa funcionalidade</AlertMessage>
        </Alert>
    </NotAuthorized>
</AuthorizeView>

<Alert Visible="true" Color="Color.Secondary" Margin="Margin.Is2.FromTop">
    <AlertMessage><Blazorise.Icon Name="FontAwesomeIcons.Bookmark"></Blazorise.Icon> Lista de Interesses (@(wishList?.Items.Count ?? 0) itens)</AlertMessage>
</Alert>
<AuthorizeView>
    <Authorized>
        <CustomVisibility NoData="(!wishList?.Items.Any() ?? true)">
            <Row HorizontalGutter="4" VerticalGutter="4" Style="max-height: 310px; overflow: auto;">
                @foreach (var item in wishList?.Items ?? new List<WishListItem>())
                {
                    <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile">
                        <Button Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1">
                            <Image Source="@(item.logo_path)" Text="@item.name" Class="w-100"></Image>
                        </Button>
                    </Column>
                }
            </Row>
        </CustomVisibility>
    </Authorized>
    <NotAuthorized>
        <Alert Visible="true" Color="Color.Warning">
            <AlertMessage><Blazorise.Icon Name="FontAwesomeIcons.Bullhorn"></Blazorise.Icon> Favor, realizar login para utilizar essa funcionalidade</AlertMessage>
        </Alert>
    </NotAuthorized>
</AuthorizeView>

@code {
    private MyProviders? myProviders { get; set; }
    private WishList? wishList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            base.OnInitialized();

            RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, (Region value) => Settings.Region = value);

            myProviders = await Http.MyProviders_Get(StorageService.Session);
            wishList = await Http.WishList_Get(StorageService.Session);
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }
}