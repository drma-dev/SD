@page "/List"
@inherits ComponenteCore<List>
@using System.Linq
@using SD.Shared.Model
@inject Settings Settings

<Alert Visible="true" Color="Color.Secondary">
    <AlertMessage>Premiações (@(Premiacoes.Count) itens)</AlertMessage>
</Alert>
<CustomVisibility NoData="(!Premiacoes.Any())">
    <Row HorizontalGutter="4" VerticalGutter="4">
        @foreach (var item in Premiacoes)
        {
            <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile" TextAlignment="TextAlignment.Center">
                <Button Type="ButtonType.Link" Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1" To="@item.link">
                    <Image Source="@(item.logo_path)" Text="@item.name" Class="w-100"></Image>
                </Button>
                <Badge Color="Color.Primary" Pill="true">@item.name</Badge>
            </Column>
        }
    </Row>
</CustomVisibility>

<Alert Visible="true" Color="Color.Secondary" Margin="Margin.Is2.FromTop">
    <AlertMessage>Sites Especializados (@(Outros.Count) itens)</AlertMessage>
</Alert>
<CustomVisibility NoData="(!Outros.Any())">
    <Row HorizontalGutter="4" VerticalGutter="4">
        @foreach (var item in Outros)
        {
            <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile" TextAlignment="TextAlignment.Center">
                <Button Type="ButtonType.Link" Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1" To="@item.link">
                    <Image Source="@(item.logo_path)" Text="@item.name" Class="w-100"></Image>
                </Button>
                <Badge Color="Color.Primary" Pill="true">@item.name</Badge>
            </Column>
        }
    </Row>
</CustomVisibility>

@code {
    private List<Item> Premiacoes { get; set; } = new();
    private List<Item> Outros { get; set; } = new();

    public class Item
    {
        public int id { get; set; }
        public string? name { get; set; }
        public string? logo_path { get; set; }
        public string? link { get; set; }
    }

    protected override void OnInitialized()
    {
        try
        {
            base.OnInitialized();

            RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, (Region value) => Settings.Region = value);

            Premiacoes.Add(new Item() { id = 1, name = "Oscar", logo_path = "logo/oscar.png", link = "/Oscar" });
            Premiacoes.Add(new Item() { id = 1, name = "Golden Globe", logo_path = "logo/goldenglobes.png", link = "/GoldenGlobes" });
            Premiacoes.Add(new Item() { id = 1, name = "Emmys", logo_path = "logo/emmys.png", link = "/Emmys" });

            Outros.Add(new Item() { id = 1, name = "IMDB", logo_path = "logo/imdb.png", link = "/Imdb" });
            Outros.Add(new Item() { id = 1, name = "TMDB", logo_path = "logo/tmdb.png", link = "/Tmdb" });
        }
        catch (Exception ex)
        {
            ex.ProcessException(Toast, Logger);
        }
    }
}