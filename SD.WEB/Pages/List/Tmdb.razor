@page "/List/Tmdb"
@inherits ComponenteCore<Tmdb>
@inject Settings Settings
@using SD.WEB.Services.TMDB

<HeadPage ImageSource="logo/tmdb.png" Text="@TranslationText.tmdb_desc" Link="https://www.themoviedb.org/"></HeadPage>

<MediaList CardHeader="@TranslationText.Popular" Items="@ListPopular" maxItens="50" NextPage="@(()=>LoadPopular(popularMedia))" DisableLoadMore="PopularDisable" TypeSelected="popularMedia" TypeSelectedChanged="ChangePopularMediaType" ShowFilter="true"></MediaList>
<MediaList CardHeader="@($"{TranslationText.TopRated} ({Settings.Region})")" Items="@ListTopRated" maxItens="50" NextPage="@(()=>LoadTopRated())" DisableLoadMore="TopRatedDisable" TypeSelected="topRatedMedia" TypeSelectedChanged="ChangeTopRatedMediaType" ShowFilter="true"></MediaList>
<MediaList CardHeader="@($"{TranslationText.ComingSoon} ({Settings.Region})")" Items="@ListUpcoming" maxItens="50" NextPage="LoadUpcoming" DisableLoadMore="UpcomingDisable" ShowOnlyYear="false"></MediaList>

@code {
    private HashSet<MediaDetail> ListPopular { get; set; } = new();
    private HashSet<MediaDetail> ListTopRated { get; set; } = new();
    private HashSet<MediaDetail> ListUpcoming { get; set; } = new();

    private int popularPage = 0;
    private int topRatedPage = 0;
    private int upcomingPage = 0;

    private bool PopularDisable = false;
    private bool TopRatedDisable = false;
    private bool UpcomingDisable = false;

    private MediaType popularMedia = MediaType.movie;
    private MediaType topRatedMedia = MediaType.movie;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, async (Region value) => { await ChangeRegion(); });

        await LoadPopular(popularMedia);
        await LoadTopRated();
        await LoadUpcoming();

        if (ListPopular.Count < 10) await LoadPopular(popularMedia);
        if (ListTopRated.Count < 10) await LoadTopRated();
    }

    private async Task ChangeRegion()
    {
        topRatedPage = 0;
        upcomingPage = 0;

        ListTopRated = new();
        ListUpcoming = new();

        await LoadTopRated();
        await LoadUpcoming();

        if (ListTopRated.Count < 10) await LoadTopRated();
    }

    private async Task ChangePopularMediaType(MediaType mediaType)
    {
        popularMedia = mediaType;

        popularPage = 0;

        ListPopular = new();

        await LoadPopular(mediaType);

        if (ListPopular.Count < 10) await LoadPopular(popularMedia);
    }

    private async Task ChangeTopRatedMediaType(MediaType mediaType)
    {
        topRatedMedia = mediaType;

        topRatedPage = 0;

        ListTopRated = new();

        await LoadTopRated(mediaType);

        if (ListTopRated.Count < 10) await LoadTopRated();
    }

    private async Task LoadPopular(MediaType mediaType)
    {
        PopularDisable = await Http.PopulateTMDBPopular(StorageService, Settings, ListPopular, mediaType, ++popularPage);
    }

    private async Task LoadTopRated(MediaType mediaType = MediaType.movie)
    {
        TopRatedDisable = await Http.PopulateTMDBTopRated(StorageService, Settings, ListTopRated, mediaType, ++topRatedPage);
    }

    private async Task LoadUpcoming()
    {
        UpcomingDisable = await Http.PopulateTMDBUpcoming(StorageService, Settings, ListUpcoming, MediaType.movie, ++upcomingPage);
    }
}