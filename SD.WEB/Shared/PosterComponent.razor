@inherits ComponenteNoDataCore<PosterComponent>
@using SD.Shared.Helper;

<Blazorise.Link Clicked="@Clicked" Style="position: relative;">
    @if (Runtime.HasValue)
    {
        <Badge Color="Color.Light" TextColor="TextColor.Dark" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; left: 3px;">@Runtime.FormatRuntime()</Badge>
    }
    @if (Date.HasValue)
    {
        if (Date.Value < DateTime.Now.AddDays(-30))
        {
            <Badge Color="Color.Light" TextColor="TextColor.Dark" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; left: 3px; z-index: 1;">@Date.Value.Year</Badge>
        }
        else
        {
            <Badge Color="Color.Light" TextColor="TextColor.Dark" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; left: 3px; z-index: 1;">@Date.Value.ToShortDateString()</Badge>
        }
    }
    @if (Rating.HasValue)
    {
        if (Rating >= 8)
        {
            <Badge Color="Color.Success" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value</Badge>
        }
        else if (Rating >= 6)
        {
            <Badge Color="Color.Warning" TextColor="TextColor.Dark" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value</Badge>
        }
        else if (Rating > 0)
        {
            <Badge Color="Color.Danger" Padding="Padding.Is1" Style="font-size: 10px; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value</Badge>
        }
    }
    @if (string.IsNullOrEmpty(Poster))
    {
        <CardImage data-src="noimage.png" class="lazyload" Alt="@Title" title="@Title" Style="cursor: pointer;"></CardImage>

        <Div Style="position: absolute; left: 0; right: 0; margin-left: auto; margin-right: auto; top: 20px; color: black; text-align: center;">
            @Title
        </Div>
    }
    else
    {
        var wishedMovie = AppState.WishList?.Movies.Any(a => a.id == TmdbId & MediaType.movie == MediaType) ?? false;
        var wishedShow = AppState.WishList?.Shows.Any(a => a.id == TmdbId & MediaType.tv == MediaType) ?? false;
        if (wishedMovie | wishedShow)
        {
            <Blazorise.Icon Name="FontAwesomeIcons.Bookmark" IconSize="IconSize.x2" TextColor="TextColor.Light"
                    Style="position: absolute; bottom: 5px; left: 5px; z-index: 1;"></Blazorise.Icon>
        }

        var watchedMovie = AppState.WatchedList?.Movies.Any(a => a == TmdbId & MediaType.movie == MediaType) ?? false;
        var watchedShow = AppState.WatchedList?.Shows.Any(a => a == TmdbId & MediaType.tv == MediaType) ?? false;
        if (watchedMovie | watchedShow)
        {
            <Blazorise.Icon Name="FontAwesomeIcons.Eye" IconSize="IconSize.x2" TextColor="TextColor.Light"
                    Style="position: absolute; bottom: 2px; right: 5px; z-index: 1;"></Blazorise.Icon>
        }

        <CardImage data-src="@Poster" class="lazyload" Alt="@Title" title="@Title" Style=@($"cursor: pointer; {(watchedMovie | watchedShow ? "filter: grayscale(100%);" : "")}")></CardImage>
    }
</Blazorise.Link>
@if (!string.IsNullOrEmpty(Comments))
{
    <CardBody Padding="Padding.Is1">
        @foreach (var item in Comments.Split(","))
        {
            <Badge Color="Color.Secondary" Margin="Margin.Is1.FromEnd">@item</Badge>
        }
    </CardBody>
}

@code {
    [Parameter] public EventCallback<MouseEventArgs> Clicked { get; set; }
    [Parameter] public DateTime? Date { get; set; }
    [Parameter] public double? Rating { get; set; }
    [Parameter] public string? Poster { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Comments { get; set; }
    [Parameter] public string? TmdbId { get; set; }
    [Parameter] public MediaType MediaType { get; set; }
    [Parameter] public int? Runtime { get; set; }
}
