@using Toolbelt.Blazor.PWA.Updater
@inherits LayoutComponentBase
@inject NavigationManager Navigation

<MediaQueryList>
    <Layout Sider="true" Style="height: var(--app-height);">
        <LayoutSider>
            <LayoutSiderContent>
                <NavMenu />
            </LayoutSiderContent>
        </LayoutSider>
        <Layout>
            <LayoutHeader Fixed="true">
                <HeadLayout></HeadLayout>
            </LayoutHeader>
            <LayoutContent Style="overflow: auto;">
                <Container Fluid="true" Padding="Padding.Is3.FromTop">
                    @Body
                </Container>
            </LayoutContent>
            <LayoutFooter Fixed="true" Display="Display.Block.None.OnWidescreen">
                <Bar Mode="BarMode.Horizontal" Breakpoint="Breakpoint.Mobile" CollapseMode="BarCollapseMode.Small" Background="Background.Secondary" ThemeContrast="ThemeContrast.Dark"
                     Padding="Padding.Is0.FromBottom.Is0.FromTop" Style="text-align: center; display: block;">
                    <BarBrand Class="mr-0 py-1">
                        <Button Color="GetColor(TypeButton.Home)" To="/" Type="ButtonType.Link" title="Home" Class="py-1 px-2">
                            <Blazorise.Icon Name="FontAwesomeIcons.UserCircle" />
                        </Button>
                        <Button Color="GetColor(TypeButton.Providers)" To="/Provider" Type="ButtonType.Link" title="Providers" Class="py-1 px-2">
                            <BarIcon IconName="FontAwesomeIcons.Th" />
                        </Button>
                        <Button Color="GetColor(TypeButton.Lists)" To="/List" Type="ButtonType.Link" title="Lists" Class="py-1 px-2">
                            <BarIcon IconName="FontAwesomeIcons.List" />
                        </Button>
                    </BarBrand>
                </Bar>
            </LayoutFooter>
        </Layout>
    </Layout>
</MediaQueryList>

<NotificationProvider Location="NotificationLocation.End" DefaultInterval="10000" />
<PWAUpdater Text="A new version is available" />

@code {
    private enum TypeButton
    {
        Home, Providers, Lists
    }

    private TypeButton CurrentButton;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;

        ChangeCurrentButton(Navigation.Uri);

        StateHasChanged();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        ChangeCurrentButton(args.Location);

        StateHasChanged();
    }

    private void ChangeCurrentButton(string location)
    {
        if (location.Contains("/Provider")) CurrentButton = TypeButton.Providers;
        else if (location.Contains("/List")) CurrentButton = TypeButton.Lists;
        else CurrentButton = TypeButton.Home;
    }

    private Color GetColor(TypeButton type)
    {
        if (CurrentButton == type)
            return Color.Dark;
        else
            return Color.Secondary;
    }
}