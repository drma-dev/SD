@using Toolbelt.Blazor.PWA.Updater
@inherits LayoutComponentBase
@inject NavigationManager Navigation

<Layout Sider="true" Style="height: var(--app-height);">
    <LayoutSider>
        <LayoutSiderContent>
            <NavMenu />
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed="true">
            <HeadLayout></HeadLayout>
        </LayoutHeader>
        <LayoutContent Style="overflow: auto;">
            <Container Fluid="true" Padding="Padding.Is3.FromTop">
                @Body
            </Container>
        </LayoutContent>
        <LayoutFooter Fixed="true" Display="Display.Block.None.OnWidescreen">
            <Bar Mode="BarMode.Horizontal" Breakpoint="Breakpoint.Mobile" CollapseMode="BarCollapseMode.Small" Background="Background.Secondary" ThemeContrast="ThemeContrast.Dark"
                 Padding="Padding.Is0.FromBottom.Is0.FromTop" Style="text-align: center; display: block;">
                <Container Fluid="true">
                    <BarBrand Class="mr-0 py-1">
                        <Button Color="GetColor(TypeButton.Providers)" To="/" Type="ButtonType.Link" title="Providers" Class="py-1 px-3">
                            <Blazorise.Icon Name="FontAwesomeIcons.Stream" />
                        </Button>
                        <Button Color="GetColor(TypeButton.IMDB)" To="/IMDB" Type="ButtonType.Link" title="IMDB" Class="py-1 px-3">
                            <Image Source="logo/imdb.png" Style="width: 20px; margin-bottom: 1px;"></Image>
                        </Button>
                        <Button Color="GetColor(TypeButton.TMDB)" To="/TMDB" Type="ButtonType.Link" title="TMDB" Class="py-1 px-3">
                            <Image Source="logo/tmdb.png" Style="width: 20px; margin-bottom: 1px;"></Image>
                        </Button>
                        <Button Color="GetColor(TypeButton.Oscar)" To="/Oscar" Type="ButtonType.Link" title="Oscar" Class="py-1 px-3">
                            <Image Source="logo/oscar.png" Style="width: 20px; margin-bottom: 1px;"></Image>
                        </Button>
                        <Button Color="GetColor(TypeButton.GoldenGlobes)" To="/GoldenGlobes" Type="ButtonType.Link" title="Golden Globes" Class="py-1 px-3">
                            <Image Source="logo/goldenglobes.png" Style="width: 20px; margin-bottom: 1px;"></Image>
                        </Button>
                        <Button Color="GetColor(TypeButton.Emmys)" To="/Emmys" Type="ButtonType.Link" title="Emmys" Class="py-1 px-3">
                            <Image Source="logo/emmys.png" Style="width: 20px; margin-bottom: 1px;"></Image>
                        </Button>
                    </BarBrand>
                </Container>
            </Bar>
        </LayoutFooter>
    </Layout>
</Layout>

<NotificationProvider Location="NotificationLocation.End" DefaultInterval="10000" />
<PWAUpdater Text="A new version is available" />

@code {
    private enum TypeButton
    {
        Providers, TMDB, IMDB, Oscar, GoldenGlobes, Emmys
    }

    private TypeButton CurrentButton;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;

        ChangeCurrentButton(Navigation.Uri);

        StateHasChanged();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        ChangeCurrentButton(args.Location);

        StateHasChanged();
    }

    private void ChangeCurrentButton(string location)
    {
        if (location.Contains("/TMDB")) CurrentButton = TypeButton.TMDB;
        else if (location.Contains("/IMDB")) CurrentButton = TypeButton.IMDB;
        else if (location.Contains("/Oscar")) CurrentButton = TypeButton.Oscar;
        else if (location.Contains("/GoldenGlobes")) CurrentButton = TypeButton.GoldenGlobes;
        else if (location.Contains("/Emmys")) CurrentButton = TypeButton.Emmys;
        else CurrentButton = TypeButton.Providers;
    }

    private Color GetColor(TypeButton type)
    {
        if (CurrentButton == type)
            return Color.Dark;
        else
            return Color.Secondary;
    }
}