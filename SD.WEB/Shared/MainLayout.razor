@using Toolbelt.Blazor.PWA.Updater
@inherits LayoutComponentBase
@inject NavigationManager Navigation

<MediaQueryList>
    <Layout Sider="true" Style="height: var(--app-height);">
        <LayoutSider>
            <LayoutSiderContent>
                <NavMenu />
            </LayoutSiderContent>
        </LayoutSider>
        <Layout>
            <LayoutHeader Fixed="true">
                <HeadLayout></HeadLayout>
            </LayoutHeader>
            <LayoutContent Style="overflow: auto;">
                <Container Fluid="true" Padding="Padding.Is3.FromTop">
                    @Body
                </Container>
            </LayoutContent>
            <LayoutFooter Fixed="true" Display="Display.Block.None.OnWidescreen">
                <Bar Mode="BarMode.Horizontal" Breakpoint="Breakpoint.Mobile" CollapseMode="BarCollapseMode.Small" Background="Background.Secondary" ThemeContrast="ThemeContrast.Dark"
                     Padding="Padding.Is0.FromBottom.Is0.FromTop" Style="text-align: center; display: block;">
                    <BarBrand Class="mr-0 py-1">
                        <Button Color="GetColor(TypeButton.Home)" To="/" Type="ButtonType.Link" title="@GlobalTranslations.MenuHome" Class="py-1 px-2">
                            <Blazorise.Icon Name="FontAwesomeIcons.Home" />
                        </Button>
                        <Button Color="GetColor(TypeButton.Profile)" To="/Profile" Type="ButtonType.Link" title="@GlobalTranslations.MenuProfile" Class="py-1 px-2">
                            <BarIcon IconName="FontAwesomeIcons.UserCircle" />
                        </Button>
                        <Button Color="GetColor(TypeButton.Suggestions)" To="/Suggestions" Type="ButtonType.Link" title="@GlobalTranslations.MenuSuggestions" Class="py-1 px-2">
                            <BarIcon IconName="FontAwesomeIcons.List" />
                        </Button>
                        <Button Color="GetColor(TypeButton.Support)" To="/Support" Type="ButtonType.Link" title="@GlobalTranslations.MenuSupport" Class="py-1 px-2">
                            <BarIcon IconName="FontAwesomeIcons.Bug" />
                        </Button>
                    </BarBrand>
                </Bar>
            </LayoutFooter>
        </Layout>
    </Layout>
</MediaQueryList>

<NotificationProvider Location="NotificationLocation.End" DefaultInterval="10000" />
<PWAUpdater Text="@GlobalTranslations.PWAUpdaterText" ButtonCaption="@GlobalTranslations.PWAUpdaterButton" />

@code {
    private enum TypeButton
    {
        Home, Profile, Suggestions, Support
    }

    private TypeButton CurrentButton;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;

        ChangeCurrentButton(Navigation.Uri);

        StateHasChanged();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        ChangeCurrentButton(args.Location);

        StateHasChanged();
    }

    private void ChangeCurrentButton(string location)
    {
        if (location.Contains("/Profile")) CurrentButton = TypeButton.Profile;
        else if (location.Contains("/Suggestions")) CurrentButton = TypeButton.Suggestions;
        else if (location.Contains("/Support")) CurrentButton = TypeButton.Support;
        else CurrentButton = TypeButton.Home;
    }

    private Color GetColor(TypeButton type)
    {
        if (CurrentButton == type)
            return Color.Dark;
        else
            return Color.Secondary;
    }
}