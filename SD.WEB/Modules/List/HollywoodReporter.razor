@page "/List/HollywoodReporter"
<PageTitle>SD - Lists - Hollywood Reporter</PageTitle>
@using SD.Shared.Model
@inherits ComponenteCore<Tmdb>
@using SD.WEB.Modules.List.Core
@using SD.WEB.Modules.Profile.Core
@inject WatchedListApi WatchedListApi
@inject WishListApi WishListApi
@inject TmdbApi TmdbApi

<SD.WEB.Modules.List.Components.HeadPage ImageSource="logo/HollywoodReporter.png" Text="@TranslationText.thr_desc" Link="https://www.hollywoodreporter.com/"></SD.WEB.Modules.List.Components.HeadPage>

<SD.WEB.Modules.List.Components.MediaList CardHeader="Top 100 Movies" Items="@ListMovies" list_id="8222343" maxItens="100"
                                          WishList="wishList" WishListChanged="@(async(WishList value)=>{wishList = value; })"
                                          WatchedList="watchedList" WatchedListChanged="@(async (WatchedList value) => { watchedList = value;  })"></SD.WEB.Modules.List.Components.MediaList>
<SD.WEB.Modules.List.Components.MediaList CardHeader="Top 100 TV Shows" Items="@ListShows" list_id="8222348" maxItens="100"
                                          WishList="wishList" WishListChanged="@(async(WishList value)=>{wishList = value; })"
                                          WatchedList="watchedList" WatchedListChanged="@(async (WatchedList value) => { watchedList = value;  })"></SD.WEB.Modules.List.Components.MediaList>

@code {
    private HashSet<MediaDetail> ListMovies { get; set; } = new();
    private HashSet<MediaDetail> ListShows { get; set; } = new();

    private WishList? wishList { get; set; }
    private WatchedList? watchedList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        wishList = await WishListApi.Get();
        watchedList = await WatchedListApi.Get();

        ListMovies = await TmdbApi.GetListList(1, GetExtraParameters("8222343"));
        ListShows = await TmdbApi.GetListList(1, GetExtraParameters("8222348"));
    }

    private Dictionary<string, string> GetExtraParameters(string list_id)
    {
        return new Dictionary<string, string>() { { "list_id", list_id } }; ;
    }
}