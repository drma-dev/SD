@page "/List/Imdb"
<PageTitle>SD - Lists - IMDB</PageTitle>
@inherits ComponenteCore<Imdb>
@using SD.Shared.Model
@using SD.WEB.Modules.List.Core;
@using SD.WEB.Modules.Profile.Core
@inject WatchedListApi WatchedListApi
@inject WishListApi WishListApi
@inject ImdbApi ImdbApi
@inject TmdbApi TmdbApi

<SD.WEB.Modules.List.Components.HeadPage ImageSource="logo/imdb.png" Text="@TranslationText.imdb_desc" Link="https://www.imdb.com/"></SD.WEB.Modules.List.Components.HeadPage>

<SD.WEB.Modules.List.Components.MediaList CardHeader="@TranslationText.Popular" Items="@ListPopular" maxItens="50" IsIMDB="true" NextPage="@(()=>LoadPopular(popularMedia))" DisableLoadMore="PopularDisable"
                                          TypeSelected="popularMedia" TypeSelectedChanged="ChangePopularMediaType" ShowFilter="true"
                                          WishList="wishList" WishListChanged="@(async(WishList value)=>{wishList = value; })"
                                          WatchedList="watchedList" WatchedListChanged="@(async (WatchedList value) => { watchedList = value;  })"></SD.WEB.Modules.List.Components.MediaList>
<SD.WEB.Modules.List.Components.MediaList CardHeader="Top 250" Items="@ListTopRated" list_id="@(topRatedMedia== MediaType.movie?"8223821":"8223826")" maxItens="250"
                                          TypeSelected="topRatedMedia" TypeSelectedChanged="ChangeTopRatedMediaType" ShowFilter="true"
                                          WishList="wishList" WishListChanged="@(async(WishList value)=>{wishList = value; })"
                                          WatchedList="watchedList" WatchedListChanged="@(async (WatchedList value) => { watchedList = value;  })"></SD.WEB.Modules.List.Components.MediaList>
<SD.WEB.Modules.List.Components.MediaList CardHeader="@TranslationText.ComingSoon" Items="@ListUpcoming" maxItens="50" IsIMDB="true" NextPage="LoadUpcoming" DisableLoadMore="UpcomingDisable"
                                          ShowOnlyYear="false"
                                          WishList="wishList" WishListChanged="@(async(WishList value)=>{wishList = value; })"
                                          WatchedList="watchedList" WatchedListChanged="@(async (WatchedList value) => { watchedList = value;  })"></SD.WEB.Modules.List.Components.MediaList>

@code {
    private HashSet<MediaDetail> ListPopular { get; set; } = new();
    private HashSet<MediaDetail> ListTopRated { get; set; } = new();
    private HashSet<MediaDetail> ListUpcoming { get; set; } = new();

    private bool PopularDisable = true;
    private bool UpcomingDisable = true;

    private MediaType popularMedia = MediaType.movie;
    private MediaType topRatedMedia = MediaType.movie;

    private WishList? wishList { get; set; }
    private WatchedList? watchedList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        wishList = await WishListApi.Get();
        watchedList = await WatchedListApi.Get();

        await LoadPopular(popularMedia);
        await LoadTopRated(popularMedia);
        await LoadUpcoming();

        if (ListPopular.Count < 10) await LoadPopular(popularMedia);
    }

    private async Task ChangePopularMediaType(MediaType mediaType)
    {
        popularMedia = mediaType;

        ListPopular = new();

        await LoadPopular(mediaType);

        if (ListPopular.Count < 10) await LoadPopular(popularMedia);

        wishList = await WishListApi.Get();
        watchedList = await WatchedListApi.Get();
    }

    private async Task ChangeTopRatedMediaType(MediaType mediaType)
    {
        topRatedMedia = mediaType;

        ListTopRated = new();

        await LoadTopRated(mediaType);
    }

    private async Task LoadPopular(MediaType mediaType)
    {
        ListPopular = await ImdbApi.GetPopularList(mediaType);
    }

    private async Task LoadTopRated(MediaType mediaType)
    {
        if (mediaType == MediaType.movie)
            ListTopRated = await TmdbApi.GetListList(GetExtraParameters("8223821"), ListTopRated);
        else //tv
            ListTopRated = await TmdbApi.GetListList(GetExtraParameters("8223826"), ListTopRated);
    }

    private async Task LoadUpcoming()
    {
        ListUpcoming = await ImdbApi.GetUpcomingList(MediaType.movie);
    }

    private Dictionary<string, string> GetExtraParameters(string list_id)
    {
        return new Dictionary<string, string>() { { "list_id", list_id } }; ;
    }
}