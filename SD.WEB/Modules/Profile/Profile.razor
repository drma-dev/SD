@page "/Profile"
@using SD.WEB.Modules.Profile.Core;
<SeoHeader Title="@SeoTranslations.ProfileTitle" Description="@SeoTranslations.ProfileDescription" Url="/Profile"></SeoHeader>
@inherits PageNoDataCore<Profile>
@inject HttpClient http

@inject MyProvidersApi MyProvidersApi

<Div>UserId: @UserId</Div>

<MyProviderComponent Fake="Fake"></MyProviderComponent>

<Row HorizontalGutter="8" VerticalGutter="8">
    <Column ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnDesktop">
        <MyWishListComponent Fake="Fake"></MyWishListComponent>
    </Column>
    <Column ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnDesktop">
        <MyWatchingListComponent Fake="Fake"></MyWatchingListComponent>
    </Column>
</Row>

@code {
    [Parameter][SupplyParameterFromQuery(Name = "Fake")] public bool Fake { get; set; } = false;

    public string? UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var response = await http.GetAsync(BaseApi(false) + "Principal/GetUserId");
        UserId = await response.Content.ReadAsStringAsync();

        if (Fake)
        {
            AppState.ChangeWishList(await http.GetFromJsonAsync<WishList>("/Data/WishList.json"));
            AppState.ChangeWatchedList(await http.GetFromJsonAsync<WatchedList>("/Data/WatchedList.json"));
            AppState.ChangeWatchingList(await http.GetFromJsonAsync<WatchingList>("/Data/WatchingList.json"));
        }
    }

    private string BaseApi(bool isExternalLink)
    {
        if (isExternalLink) return "";
        else return http.BaseAddress?.ToString().Contains("localhost") ?? true ? "http://localhost:7071/api/" : http.BaseAddress.ToString() + "api/";
    }
}