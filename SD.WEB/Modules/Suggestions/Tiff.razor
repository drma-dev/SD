@page "/suggestions/tiff"
<SeoHeader Title="Suggestions | Toronto International Film Festival" Keywords="@(new []{"Tiff"})" Url="/suggestions/tiff"></SeoHeader>
@inherits PageCore<Emmys>

@using SD.WEB.Modules.Profile.Core
@using SD.WEB.Modules.Suggestions.Core
@using SD.WEB.Modules.Suggestions.Components
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<HeadPage Title="Toronto International Film Festival" ImageSource="logo/tiff.png" Text="TIFF is a charitable cultural organization with a mission to transform the way people see the world, through film." Link="https://www.tiff.net/"></HeadPage>

@*https://www.imdb.com/event/ev0000659/2022/1*@
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.TorontoPeoplesChoiceBestFilm" MaxItens="13" Watched="WatchedList" Watching="WatchingList" Wish="WishList" ShowPrivateAction="true"></MediaList>
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.TorontoPeoplesChoiceDocumentary" MaxItens="13" Watched="WatchedList" Watching="WatchingList" Wish="WishList" ShowPrivateAction="true"></MediaList>
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.TorontoPeoplesChoiceMidnightMadness" MaxItens="13" Watched="WatchedList" Watching="WatchingList" Wish="WishList" ShowPrivateAction="true"></MediaList>

@code {
    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override void OnInitialized()
    {
        WatchedListApi.DataChanged += (WatchedList? model) => { WatchedList = model; StateHasChanged(); };
        WatchingListApi.DataChanged += (WatchingList? model) => { WatchingList = model; StateHasChanged(); };
        WishListApi.DataChanged += (WishList? model) => { WishList = model; StateHasChanged(); };
    }

    protected override async Task LoadDataRender()
    {
        WatchedList = await WatchedListApi.Get(IsAuthenticated, null);
        WatchingList = await WatchingListApi.Get(IsAuthenticated, null);
        WishList = await WishListApi.Get(IsAuthenticated, null);
    }
}