@page "/suggestions/sundance"
<SeoHeader Title="Suggestions | Sundance" Keywords="@(new []{"Sundance"})" Url="/suggestions/sundance"></SeoHeader>
@inherits PageCore<Emmys>

@using SD.WEB.Modules.Profile.Core
@using SD.WEB.Modules.Suggestions.Core
@using SD.WEB.Modules.Suggestions.Components
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<HeadPage Title="Sundance" ImageSource="logo/sundance.png" Text="The Sundance Film Festival is the ultimate gathering of original storytellers and audiences seeking new voices and fresh perspectives. Our annual program includes dramatic and documentary features, short films, and episodic content." Link="https://festival.sundance.org/"></HeadPage>

@*https://www.imdb.com/event/ev0000631/2023/1*@
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.SundanceGrandJuryPrizeDocumentary" MaxItens="14" Private="false" WatchedList="WatchedList" WatchingList="WatchingList" WishList="WishList"></MediaList>
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.SundanceGrandJuryPrizeDramatic" MaxItens="14" Private="false" WatchedList="WatchedList" WatchingList="WatchingList" WishList="WishList"></MediaList>

@code {
    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override void OnInitialized()
    {
        WatchedListApi.DataChanged += (WatchedList? model) => WatchedList = model;
        WatchingListApi.DataChanged += (WatchingList? model) => WatchingList = model;
        WishListApi.DataChanged += (WishList? model) => WishList = model;
    }

    protected override async Task LoadDataRender()
    {
        WatchedList = await WatchedListApi.Get(IsUserAuthenticated);
        WatchingList = await WatchingListApi.Get(IsUserAuthenticated);
        WishList = await WishListApi.Get(IsUserAuthenticated);
    }
}
