@page "/suggestions/trakt"
<SeoHeader Title="Suggestions | Trakt" Keywords="@(new []{"Trakt"})" Url="/suggestions/trakt"></SeoHeader>
@inherits PageCore<Emmys>

@using SD.WEB.Modules.Profile.Core
@using SD.WEB.Modules.Suggestions.Core
@using SD.WEB.Modules.Suggestions.Components
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<HeadPage Title="Trakt" ImageSource="logo/trakt.png" Text="Track what you watch and when. Discover what's hot and where you can watch it. Share comments, ratings and recommendations." Link="https://trakt.tv/"></HeadPage>

@*https://trakt.tv/movies/recommended/all*@
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.TraktRecommendedMovies" MaxItens="100" Private="false" Watched="WatchedList" Watching="WatchingList" Wish="WishList"></MediaList>
@*https://trakt.tv/shows/recommended/all*@
<MediaList MediaListApi="TmdbListApi" List="@EnumLists.TraktRecommendedTVShows" MaxItens="100" Private="false" Watched="WatchedList" Watching="WatchingList" Wish="WishList"></MediaList>

@code {
    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override void OnInitialized()
    {
        WatchedListApi.DataChanged += (WatchedList? model) => { WatchedList = model; StateHasChanged(); };
        WatchingListApi.DataChanged += (WatchingList? model) => { WatchingList = model; StateHasChanged(); };
        WishListApi.DataChanged += (WishList? model) => { WishList = model; StateHasChanged(); };
    }

    protected override async Task LoadDataRender()
    {
        WatchedList = await WatchedListApi.Get(IsAuthenticated, null);
        WatchingList = await WatchingListApi.Get(IsAuthenticated, null);
        WishList = await WishListApi.Get(IsAuthenticated, null);
    }
}