@using SD.WEB.Modules.Suggestions.Core;
@inherits ComponenteCore<SearchPopup>

@inject TmdbSearchApi TmdbSearch

<ModalHeader>
    <ModalTitle Size="HeadingSize.Is5">@TitleHead</ModalTitle>
    <CloseButton />
</ModalHeader>
<ModalBody MaxHeight="70">
    <RenderControl Task="LoadItems">
        <MediaListFull @ref="MediaListFull" MediaListApi="TmdbSearch" StringParameters="@StringParameters" Items="Items" MaxItens="100" ShowHead="false"></MediaListFull>
    </RenderControl>    
</ModalBody>
<ModalFooter>
    <Button Color="Color.Secondary" Clicked="@HideModal" Float="Float.End" Size="Size.Small">@TranslationText.Close</Button>
</ModalFooter>

@code {
    [Inject] public IModalService ModalService { get; set; } = default!;

    [Parameter] public string? TitleHead { get; set; }
    [Parameter] public HashSet<MediaDetail> Items { get; set; } = new();
    [Parameter] public string? Search { get; set; }

    private MediaListFull? MediaListFull;
    private Dictionary<string, string> StringParameters => new Dictionary<string, string>() { { "query", Search ?? "" } };

    protected async Task<bool> LoadItems()
    {
        var result = await TmdbSearch.GetList(Items, null, StringParameters);
        Items = result.list;

        return !Items.Any();
    }

    public async Task HideModal()
    {
        await ModalService.Hide();
    }
}
